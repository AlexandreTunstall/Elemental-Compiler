foreign export "expsign" c_expsign
    : (∀ ((∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → 0) → 0)
    → (∀ ((∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → 0) → 0)
    → IO (∀ 0 → 0 → 0)

foreign primitive pureIO : ∀ 0 → IO 0
foreign primitive bindIO : ∀ IO 0 → ∀ (1 → IO 0) → IO 0

zero = Λ λ((∀ 0 → (1 → 0) → 0) → 0) 0 (nothing @0)
succ = λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) Λ λ((∀ 0 → (1 → 0) → 0) → 0) 0 (just @0 (1 @0 0))

nothing = Λ Λ λ0 λ(1 → 0) 1
just = Λ λ0 Λ λ0 λ(1 → 0) 0 2

f = Λ λ0 λ0 0
t = Λ λ0 λ0 1

add = λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0)
    1 @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) (λ(∀ 0 → ((∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) → 0) → 0)
        0 @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) 1 succ)

mul = λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0)
    1 @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) (λ(∀ 0 → ((∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) → 0) → 0)
        0 @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) zero (add 1))

exp = λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0)
    0 @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) (λ(∀ 0 → ((∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) → 0) → 0)
        0 @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) (succ zero) (mul 2))

isOdd = λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0)
    0 @(∀ 0 → 0 → 0) (λ(∀ 0 → ((∀ 0 → 0 → 0) → 0) → 0)
        0 @(∀ 0 → 0 → 0) f not)

not = λ(∀ 0 → 0 → 0) Λ λ0 λ0 2 @0 0 1

from2 = λ(∀ ((∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → 0) → 0)
    0 @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0)
    (λ(∀ 0 → 0 → 0) λ(∀ 0 → 0 → 0)
        add (from1 0) (mul (succ (succ zero)) (from1 1)))

from1 = λ(∀ 0 → 0 → 0) 0 @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) (succ zero) zero

c_expsign = λ(∀ ((∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → 0) → 0)
    λ(∀ ((∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → 0) → 0)
    pureIO @(∀ 0 → 0 → 0) (isOdd (exp (from2 1) (from2 0)))
    -- pureIO @(∀ 0 → 0 → 0) (isOdd (add (from2 1) (from2 0)))

{-
to8 = λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) _

c_exp = λ(∀ ((∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → 0) → 0)
    λ(∀ ((∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → 0) → 0)
    pureIO @(∀ ((∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → (∀ 0 → 0 → 0) → 0) → 0)
    (to8 (exp (from8 1) (from8 0)))

pred = λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0)
    0 @(∀ 0 → ((∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) → 0) → 0)
    (λ(∀ 0 → ((∀ 0 → ((∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) → 0) → 0) → 0) → 0)
        0 @(∀ 0 → ((∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) → 0) → 0)
        (nothing @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0))
        (λ(∀ 0 → ((∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) → 0) → 0)
            0 @(∀ 0 → ((∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) → 0) → 0)
                (just @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) zero)
                (λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0)
                    just @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) (succ 0))))

sub = λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0)
    0 @(∀ 0 → ((∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) → 0) → 0)
    (λ(∀ 0 → ((∀ 0 → ((∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) → 0) → 0) → 0) → 0)
        0 @(∀ 0 → ((∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) → 0) → 0)
        (just @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) 2)
        (λ(∀ 0 → ((∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) → 0) → 0)
            0 @(∀ 0 → ((∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) → 0) → 0)
                (nothing @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0))
                pred))
-}

{-
mod = λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0)
    1 @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) (λ(∀ 0 → ((∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) → 0) → 0)
        0 @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) zero (succMod 1))

-- succMod a b = "(succ b) mod a" if b = "b mod a"
succMod = λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0)
    eq (succ 0) 1 @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) zero (succ 0)

eq = λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0)
    0 @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) (λ(∀ 0 → ((∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) → 0) → 0)
        0 @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) isZero isSucc)

isZero = λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0)
    0 @(∀ 0 → 0 → 0) t (λ(∀ 0 → 0 → 0) f)

isSucc = λ((∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) → ∀ 0 → 0 → 0) λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0)
    0 @(∀ 0 → 0 → 0) f (λ(∀ 0 → 0 → 0) _)
-}

