-- CataStatic but using a doubling function instead of repeating succ.

foreign export "main" main : IO (∀ 0 → 0)

main = count @(IO (∀ 0 → 0)) (λ(∀ 0 → (IO (∀ 0 → 0) → 0) → 0)
    0 @(IO (∀ 0 → 0))
        (pureIO @(∀ 0 → 0) (Λ λ0 0))
        (λ(IO (∀ 0 → 0)) bindIO @(∀ 0 → 0) 0 @(∀ 0 → 0) (λ(∀ 0 → 0) c_dothing))
        -- (λ(IO (∀ 0 → 0)) 0)
    )

count = double (double (succ zero))
-- count = double (succ (succ2 zero))
-- count = double (Λ λ((∀ 0 → (1 → 0) → 0) → 0) 0 (Λ λ0 λ(1 → 0) 0
--     ((λ((∀ 0 → (2 → 0) → 0) → 1) 0 (Λ λ0 λ(2 → 0) 0 (2 (Λ λ0 λ(3 → 0) 1)))) 2)))
-- count = double (Λ λ((∀ 0 → (1 → 0) → 0) → 0)
--     (λ((∀ 0 → (1 → 0) → 0) → 0) 0 (Λ λ0 λ(1 → 0) 0 (2 (Λ λ0 λ(2 → 0) 1)))) 0)

-- count = double count1
-- count1 = Λ λ((∀ 0 → (1 → 0) → 0) → 0) 0 (Λ λ0 λ(1 → 0) 0 (2 (Λ λ0 λ(2 → 0) 0 (4 (Λ λ0 λ(3 → 0) 1)))))

double = λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0)
    0 @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) (λ(∀ 0 → ((∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) → 0) → 0)
        0 @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) 1 succ)
        -- 0 @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) 1 (λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) 0))

zero = Λ λ((∀ 0 → (1 → 0) → 0) → 0) 0 (Λ λ0 λ(1 → 0) 1)
succ = λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) Λ λ((∀ 0 → (1 → 0) → 0) → 0) 0 (Λ λ0 λ(1 → 0) 0 (3 @1 2))
{-
succ2 = λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) Λ λ((∀ 0 → (1 → 0) → 0) → 0) 0 (Λ λ0 λ(1 → 0) 0 (3 @1 2))
-}

{-
    succ zero = Λ λ((∀ 0 → (1 → 0) → 0) → 0) 0 (Λ λ0 λ(1 → 0) 0 (2 (Λ λ0 λ(1 → 0) 1)))
    succ (succ zero) = Λ λ((∀ 0 → (1 → 0) → 0) → 0) 0 (Λ λ0 λ(1 → 0) 0 (succ zero @1 2))

    double = \a -> a (\b -> b a (\c -> c))
    -- count = double (\a -> a (\_ b -> b ((\c -> c (\_ d -> d (c (\e _ -> e)))) a)))
    count = double (\a -> (\b -> b (\_ c -> c (b (\d _ -> d)))) a)
    double has level 83
    count has level 92
-}

foreign primitive pureIO : ∀ 0 → IO 0
foreign primitive bindIO : ∀ IO 0 → ∀ (1 → IO 0) → IO 0

foreign import c_dothing "dothing" : IO (∀ 0 → 0)
