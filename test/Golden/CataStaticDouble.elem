-- CataStatic but using a doubling function instead of repeating succ.

foreign export "main" main : IO (∀ 0 → 0)

main = count @(IO (∀ 0 → 0)) (λ(∀ 0 → (IO (∀ 0 → 0) → 0) → 0)
    0 @(IO (∀ 0 → 0))
        (pureIO @(∀ 0 → 0) (Λ λ0 0))
        (λ(IO (∀ 0 → 0)) bindIO @(∀ 0 → 0) 0 @(∀ 0 → 0) (λ(∀ 0 → 0) c_dothing))
    )

count = double (double (succ zero))

double = λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0)
    0 @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) (λ(∀ 0 → ((∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) → 0) → 0)
        0 @(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) 1 succ)

zero = Λ λ((∀ 0 → (1 → 0) → 0) → 0) 0 (Λ λ0 λ(1 → 0) 1)
succ = λ(∀ ((∀ 0 → (1 → 0) → 0) → 0) → 0) Λ λ((∀ 0 → (1 → 0) → 0) → 0) 0 (Λ λ0 λ(1 → 0) 0 (3 @1 2))

foreign primitive pureIO : ∀ 0 → IO 0
foreign primitive bindIO : ∀ IO 0 → ∀ (1 → IO 0) → IO 0

foreign import c_dothing "dothing" : IO (∀ 0 → 0)
